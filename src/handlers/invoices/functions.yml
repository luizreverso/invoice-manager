createInvoice:
  handler: src/handlers/invoices/create.handler
  events:
    - http:
        path: /invoices
        method: post
        authorizer:
          name: auth
          type: token
          identitySource: method.request.header.Authorization
        documentation:
          summary: "Create a new invoice"
          description: "Registers a new invoice with the provided details."
          headerParams:
            - name: "Authorization"
              required: true
              description: "Bearer token for user authentication."
              schema:
                type: string
          requestBody:
            description: "Invoice data to be added"
            required: true
          requestModels:
            application/json:
              schema:
                type: object
                properties:
                  clientId:
                    type: string
                    description: "ID of the client associated with the invoice."
                  invoiceNumber:
                    type: string
                    description: "Number of the invoice."
                  dueDate:
                    type: string
                    format: date
                    description: "Due date for the payment of the invoice."
                  status:
                    type: string
                    enum: ["created", "sent", "paid", "canceled"]
                    description: "Current status of the invoice."
          methodResponses:
            - statusCode: 200
              responseBody:
                description: "Invoice successfully created."
              responseModels:
                application/json: "Invoice"
            - statusCode: 400
              responseBody:
                description: "Bad Request. Invalid input."
              responseModels:
                application/json: "EmptyResponse"
            - statusCode: 500
              responseBody:
                description: "Internal server error."
              responseModels:
                application/json: "EmptyResponse"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:dynamodb:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":table/"
            - Ref: InvoiceManagerTable
editInvoice:
  handler: src/handlers/invoices/edit.handler
  events:
    - http:
        path: /invoices/{invoiceId}
        method: put
        authorizer:
          name: auth
          type: token
          identitySource: method.request.header.Authorization
        documentation:
          summary: "Edit an existing invoice"
          description: "Update the details of an existing invoice by providing its ID and the new data."
          pathParams:
            - name: "invoiceId"
              required: true
              description: "ID of the invoice to be edited."
              schema:
                type: string
          headerParams:
            - name: "Authorization"
              required: true
              description: "Bearer token for user authentication."
              schema:
                type: string
          requestBody:
            description: "Updated invoice data"
            required: true
          requestModels:
            application/json:
              schema:
                type: object
                properties:
                  clientId:
                    type: string
                    description: "ID of the client associated with the invoice."
                  invoiceNumber:
                    type: string
                    description: "Number of the invoice."
                  dueDate:
                    type: string
                    format: date
                    description: "Due date for the payment of the invoice."
                  status:
                    type: string
                    enum: ["created", "sent", "paid", "canceled"]
                    description: "Status of the invoice."
          methodResponses:
            - statusCode: 200
              responseBody:
                description: "Invoice successfully edited."
              responseModels:
                application/json: "Invoice"
            - statusCode: 400
              responseBody:
                description: "Bad Request. Invalid input or missing required fields."
              responseModels:
                application/json: "EmptyResponse"
            - statusCode: 404
              responseBody:
                description: "Invoice not found."
              responseModels:
                application/json: "EmptyResponse"
            - statusCode: 500
              responseBody:
                description: "Internal server error."
              responseModels:
                application/json: "EmptyResponse"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:UpdateItem"
        - "dynamodb:GetItem"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:dynamodb:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":table/"
            - Ref: InvoiceManagerTable
deleteInvoice:
  handler: src/handlers/invoices/delete.handler
  events:
    - http:
        path: /invoices/{invoiceId}
        method: delete
        authorizer:
          name: auth
          type: token
          identitySource: method.request.header.Authorization
        documentation:
          summary: "Delete an invoice by ID"
          description: "Removes an invoice based on its ID from the system."
          pathParams:
            - name: "invoiceId"
              required: true
              description: "The ID of the invoice to delete."
              schema:
                type: string
          headerParams:
            - name: "Authorization"
              required: true
              description: "Bearer token for user authentication."
              schema:
                type: string
          methodResponses:
            - statusCode: 200
              responseBody:
                description: "Invoice successfully deleted."
              responseModels:
                application/json: "EmptyResponse"

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:DeleteItem"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:dynamodb:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":table/"
            - Ref: InvoiceManagerTable
getInvoice:
  handler: src/handlers/invoices/get.handler
  events:
    - http:
        path: /invoices/{invoiceId}
        method: get
        authorizer:
          name: auth
          type: token
          identitySource: method.request.header.Authorization
        documentation:
          summary: "Retrieve an invoice by ID"
          description: "Fetches the details of a specific invoice based on its ID."
          pathParams:
            - name: "invoiceId"
              required: true
              description: "The ID of the invoice to retrieve."
              schema:
                type: string
          headerParams:
            - name: "Authorization"
              required: true
              description: "Bearer token for user authentication."
              schema:
                type: string
          methodResponses:
            - statusCode: 200
              responseBody:
                description: "Invoice details successfully fetched."
              responseModels:
                application/json: "Invoice"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:dynamodb:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":table/"
            - Ref: InvoiceManagerTable
listInvoice:
  handler: src/handlers/invoices/list.handler
  events:
    - http:
        path: /invoices
        method: get
        authorizer:
          name: auth
          type: token
          identitySource: method.request.header.Authorization
        documentation:
          summary: "List all invoices"
          description: "Fetches a list of all invoices associated with the authenticated user."
          headerParams:
            - name: "Authorization"
              required: true
              description: "Bearer token for user authentication."
              schema:
                type: string
          methodResponses:
            - statusCode: 200
              responseBody:
                description: "Invoices list successfully fetched."
              responseModels:
                application/json:
                  schema:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: "The ID of the invoice."
                        owner:
                          type: string
                          description: "The owner of the invoice."
                        invoiceNumber:
                          type: string
                          description: "The invoice number."
                        dueDate:
                          type: string
                          format: date
                          description: "Due date for the payment of the invoice."
                        status:
                          type: string
                          enum: ["created", "sent", "paid", "canceled"]
                          description: "Current status of the invoice."
                        client:
                          type: string
                          description: "ID of the client associated with the invoice."
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:Query"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:dynamodb:"
            - Ref: "AWS::Region"
            - ":"
            - Ref: "AWS::AccountId"
            - ":table/"
            - Ref: InvoiceManagerTable
